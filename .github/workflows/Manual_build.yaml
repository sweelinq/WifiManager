name: Build (manually)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch or commit SHA to build'
        required: true
        default: 'main'

jobs:
  build:
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ env.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-cursor0 libxcb-keysyms1

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: '6.5.2'
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'

      - name: Get hash as version
        id: set_version
        run: echo "version=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Add version to main.qml
        run: sed -i "s/VERSION_PLACEHOLDER/${{ env.version }}/g" main.qml

      - name: Compile the project
        run: |
          mkdir build
          cd build
          qmake ../WifiManager.pro
          make

      - name: Setup AppImage tools
        run: |
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt-continuous-x86_64.AppImage

      - name: Copy files and build AppImage
        run: |
          mkdir WifiManager.appdir
          cp Deployment/default.desktop WifiManager.appdir/
          cp Icons/appicon.png WifiManager.appdir/
          cp build/WifiManager WifiManager.appdir/ 
          ./linuxdeployqt-continuous-x86_64.AppImage WifiManager.appdir/WifiManager -qmake=$(which qmake) -qmldir=$PWD -appimage

      - name: Rename AppImage
        run: mv WifiManager*.AppImage WifiManager-${{ env.version }}.AppImage

      - name: Upload AppImage as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: WifiManager-AppImage
          path: WifiManager-${{ env.version }}.AppImage
